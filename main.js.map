{
  "version": 3,
  "sources": ["src/app/guards/auth.guard.ts", "src/app/app.routes.ts", "src/environments/environment.ts", "src/main.ts"],
  "sourcesContent": ["import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from \"../services/auth.service\";\n\nexport const authGuard: CanActivateFn = () => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  return authService.authState$.pipe(\n    map(state => {\n      if (state.user) {\n        return true;\n      } else {\n        router.navigate(['/login']);\n        return false;\n      }\n    })\n  );\n};\n", "import { Routes } from '@angular/router';\nimport { authGuard } from './guards/auth.guard';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/dashboard',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    loadComponent: () => import('./components/login/login.component').then(m => m.LoginComponent)\n  },\n  {\n    path: 'dashboard',\n    loadComponent: () => import('./components/dashboard/dashboard.component').then(m => m.DashboardComponent),\n    canActivate: [authGuard]\n  },\n  {\n    path: 'lists/new',\n    loadComponent: () => import('./components/list-create/list-create.component').then(m => m.ListCreateComponent),\n    canActivate: [authGuard]\n  },\n  {\n    path: 'lists/:id/edit',\n    loadComponent: () => import('./components/list-create/list-create.component').then(m => m.ListCreateComponent),\n    canActivate: [authGuard]\n  },\n  {\n    path: 'lists/:id',\n    loadComponent: () => import('./components/list-detail/list-detail.component').then(m => m.ListDetailComponent),\n    canActivate: [authGuard]\n  },\n  {\n    path: '**',\n    redirectTo: '/dashboard'\n  }\n];", "export const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000',\n  firebase: {\n    apiKey: \"your-firebase-api-key\",\n    authDomain: \"your-project.firebaseapp.com\",\n    projectId: \"your-project-id\",\n    storageBucket: \"your-project.appspot.com\",\n    messagingSenderId: \"123456789\",\n    appId: \"your-app-id\"\n  }\n};\n", "import { Component } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { provideRouter, RouterOutlet } from '@angular/router';\nimport { provideHttpClient } from '@angular/common/http';\nimport { routes } from './app/app.routes';\nimport { Configuration } from './app/generated/api';\nimport { environment } from './environments/environment';\n\n// Configure OpenAPI client\nconst apiConfiguration = new Configuration({\n  basePath: environment.apiUrl,\n  credentials: {\n    OAuth2: () => localStorage.getItem('authToken') || undefined\n  },\n});\n\n@Component({\n  selector: 'lok-root',\n  imports: [RouterOutlet],\n  template: '<router-outlet></router-outlet>'\n})\nexport class App {\n}\n\nbootstrapApplication(App, {\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(),\n    {provide: Configuration, useValue: apiConfiguration}\n  ]\n}).catch(err => console.error(err));\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAKO,IAAM,YAA2B,MAAK;AAC3C,QAAM,cAAc,OAAO,WAAW;AACtC,QAAM,SAAS,OAAO,MAAM;AAE5B,SAAO,YAAY,WAAW,KAC5B,IAAI,WAAQ;AACV,QAAI,MAAM,MAAM;AACd,aAAO;IACT,OAAO;AACL,aAAO,SAAS,CAAC,QAAQ,CAAC;AAC1B,aAAO;IACT;EACF,CAAC,CAAC;AAEN;;;AChBO,IAAM,SAAiB;EAC5B;IACE,MAAM;IACN,YAAY;IACZ,WAAW;;EAEb;IACE,MAAM;IACN,eAAe,MAAM,OAAO,qBAAoC,EAAE,KAAK,OAAK,EAAE,cAAc;;EAE9F;IACE,MAAM;IACN,eAAe,MAAM,OAAO,qBAA4C,EAAE,KAAK,OAAK,EAAE,kBAAkB;IACxG,aAAa,CAAC,SAAS;;EAEzB;IACE,MAAM;IACN,eAAe,MAAM,OAAO,qBAAgD,EAAE,KAAK,OAAK,EAAE,mBAAmB;IAC7G,aAAa,CAAC,SAAS;;EAEzB;IACE,MAAM;IACN,eAAe,MAAM,OAAO,qBAAgD,EAAE,KAAK,OAAK,EAAE,mBAAmB;IAC7G,aAAa,CAAC,SAAS;;EAEzB;IACE,MAAM;IACN,eAAe,MAAM,OAAO,qBAAgD,EAAE,KAAK,OAAK,EAAE,mBAAmB;IAC7G,aAAa,CAAC,SAAS;;EAEzB;IACE,MAAM;IACN,YAAY;;;;;ACnCT,IAAM,cAAc;EACzB,YAAY;EACZ,QAAQ;EACR,UAAU;IACR,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;;;;;ACAX,IAAM,mBAAmB,IAAI,cAAc;EACzC,UAAU,YAAY;EACtB,aAAa;IACX,QAAQ,MAAM,aAAa,QAAQ,WAAW,KAAK;;CAEtD;AAOK,IAAO,OAAP,MAAO,KAAG;;;mCAAH,MAAG;AAAA;qEAAH,MAAG,WAAA,CAAA,CAAA,UAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,UAAA,SAAA,aAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;AAFH,IAAA,oBAAA,GAAA,eAAA;;kBADD,YAAY,GAAA,eAAA,EAAA,CAAA;AAGlB,IAAO,MAAP;;sEAAO,KAAG,CAAA;UALf;WAAU;MACT,UAAU;MACV,SAAS,CAAC,YAAY;MACtB,UAAU;KACX;;;;6EACY,KAAG,EAAA,WAAA,OAAA,UAAA,eAAA,YAAA,GAAA,CAAA;AAAA,GAAA;AAGhB,qBAAqB,KAAK;EACxB,WAAW;IACT,cAAc,MAAM;IACpB,kBAAiB;IACjB,EAAC,SAAS,eAAe,UAAU,iBAAgB;;CAEtD,EAAE,MAAM,SAAO,QAAQ,MAAM,GAAG,CAAC;",
  "names": []
}
