{
  "version": 3,
  "sources": ["src/app/components/login/login.component.ts"],
  "sourcesContent": ["import { Component, inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { Router } from '@angular/router';\nimport { AuthState } from '../../models/auth.model';\nimport { Observable } from 'rxjs';\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule\n  ],\n  template: `\n    <div class=\"login-container\">\n      <mat-card class=\"login-card\">\n        <mat-card-header>\n          <mat-card-title>Welcome to Listok</mat-card-title>\n          <mat-card-subtitle>Sign in to manage your lists</mat-card-subtitle>\n        </mat-card-header>\n    \n        <mat-card-content>\n          @if ((authState$ | async); as authState) {\n            <div class=\"login-buttons\">\n              <button\n                mat-raised-button\n                color=\"primary\"\n                class=\"social-button google-button\"\n                [disabled]=\"authState.loading\"\n                (click)=\"signInWithGoogle()\">\n                <mat-icon>account_circle</mat-icon>\n                Continue with Google\n              </button>\n              <button\n                mat-raised-button\n                color=\"accent\"\n                class=\"social-button github-button\"\n                [disabled]=\"authState.loading\"\n                (click)=\"signInWithGitHub()\">\n                <mat-icon>code</mat-icon>\n                Continue with GitHub\n              </button>\n              <button\n                mat-raised-button\n                class=\"social-button apple-button\"\n                [disabled]=\"authState.loading\"\n                (click)=\"signInWithApple()\">\n                <mat-icon>phone_iphone</mat-icon>\n                Continue with Apple\n              </button>\n              @if (authState.loading) {\n                <div class=\"loading-spinner\">\n                  <mat-spinner diameter=\"30\"></mat-spinner>\n                  <p>Signing you in...</p>\n                </div>\n              }\n              @if (authState.error) {\n                <div class=\"error-message\">\n                  <mat-icon color=\"warn\">error</mat-icon>\n                  <p>{{ authState.error }}</p>\n                </div>\n              }\n            </div>\n          }\n        </mat-card-content>\n      </mat-card>\n    </div>\n    `,\n  styles: [`\n    .login-container {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      min-height: 100vh;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      padding: 20px;\n    }\n    \n    .login-card {\n      max-width: 400px;\n      width: 100%;\n      padding: 24px;\n      border-radius: 16px;\n      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);\n    }\n    \n    mat-card-header {\n      text-align: center;\n      margin-bottom: 24px;\n    }\n    \n    mat-card-title {\n      font-size: 28px;\n      font-weight: 600;\n      margin-bottom: 8px;\n    }\n    \n    mat-card-subtitle {\n      font-size: 16px;\n      opacity: 0.7;\n    }\n    \n    .login-buttons {\n      display: flex;\n      flex-direction: column;\n      gap: 16px;\n    }\n    \n    .social-button {\n      height: 48px;\n      font-size: 16px;\n      font-weight: 500;\n      border-radius: 8px;\n      text-transform: none;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 12px;\n    }\n    \n    .google-button {\n      background-color: #4285f4;\n      color: white;\n    }\n    \n    .github-button {\n      background-color: #333;\n      color: white;\n    }\n    \n    .apple-button {\n      background-color: #000;\n      color: white;\n    }\n    \n    .loading-spinner {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      gap: 12px;\n      padding: 20px;\n    }\n    \n    .error-message {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      padding: 12px;\n      background-color: #ffebee;\n      border-radius: 8px;\n      color: #c62828;\n    }\n    \n    @media (max-width: 480px) {\n      .login-card {\n        margin: 0;\n        padding: 20px;\n      }\n      \n      .social-button {\n        height: 44px;\n        font-size: 14px;\n      }\n    }\n  `]\n})\nexport class LoginComponent implements OnInit {\n\n  private authService: AuthService = inject(AuthService)\n  private router: Router = inject(Router);\n\n  authState$: Observable<AuthState> = this.authService.authState$;\n\n  ngOnInit(): void {\n    // Check if user is already authenticated\n    this.authState$.subscribe(state => {\n      if (state.user && !state.loading) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n\n  async signInWithGoogle(): Promise<void> {\n    await this.authService.signInWithGoogle();\n  }\n\n  async signInWithGitHub(): Promise<void> {\n    await this.authService.signInWithGitHub();\n  }\n\n  async signInWithApple(): Promise<void> {\n    await this.authService.signInWithApple();\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
